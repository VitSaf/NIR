Первый слайд
Здравствуйте. Тема моей работы ?Разработка системы интеллектуального
управления освещением ?.


Второй слайд
В настоящее время в мире остро стоит тема экономии электроэнергии. Как
следствие, большим спросом пользуются системы интеллектуального
управления освещением в офисных и прочих больших помещениях, где
использование такой системы позволяет сильно экономить на
энергопотреблении. Моя работа состоит из четырёх частей и в данный момент
мы подошли к третьей из них: Разработка алгоритма оптимизации освещения.

Третий слайд
В ходе данной работы мне предстоит ответить на некоторые вопросы. Самыми
очевидными из них являются:
? Как передавать информацию? 
? Как хранить информацию? 
? Как отображать информацию? 

Четвертый слайд
Начнем отвечать на них по порядку. 
Для передачи данных будет использовать MQTT, MQTT - это простой открытый протокол, работающий поверх TCP/IP, обмена информацией.В данный момент это наиболее популярный протокол в сфере интернета вещей.
Основные особенности протокола MQTT:
    • Асинхронный протокол
    • Компактные сообщения
    • Работа в условиях нестабильной связи на линии передачи данных
    • Поддержка нескольких уровней качества обслуживания (QoS)
    • Легкая интеграция новых устройств
Обмен информацией происходит между клиентом, который может работать в режиме издателя или подписчика, и брокером. Издатель отправляет данные на MQTT брокер, указывая в сообщении определенную тему, топик. Подписчики могут получать разные данные от множества издателей в зависимости от подписки на соответствующие топики. 

Пятый слайд
В качестве MQTT брокера будем использовать Eclipse Mosquitto — брокер сообщений с открытым исходным кодом (лицензии EPL/EDL), который реализует протоколы MQTT версий 5.0, 3.1.1 и 3.1. Mosquitto лёгкий и подходит для использования на всех устройствах: от маломощных одноплатных компьютеров до полноценных серверов. И библиотеку esp_mqtt, которая позволяет легко и просто использовать этот протокол для устройств с wi-fi модулем esp (в нашем случае это esp8266)

Шестой слайд
В качестве средства хранения информации была выбрана база данных InfluxDB. Т.к. данные у нас простые и им не требуются сложные таблицы, но в тоже время мы будем получать постоянный поток данных. Поэтому используем базу данных временных рядов. База данных временных рядов оптимизирована для быстрого приёма данных. Такие системы используют индексацию данных, объединённых со временем. Как следствие, скорость загрузки не уменьшается со временем и остается достаточно стабильной (от 50 до 100 тыс. строк в секунду на одном узле).  К тому же, использование именно этой бд решает проблему последующей визуализации т. к. она работает с большинством инструментов мониторинга вроде Grafana.

Седьмой слайд
Вот тут я наступил на подводный камень. Данные от конечных устройств доходят до москито, но как их записать в базу данных, ведь она не может выступать в качестве подписчика?

Восьмой слайд
Готового решения здесь нет, следовательно, будем решать эту проблему сами. Напишем «мост» между москито и инфлюкс дб. Функционал моста сводиться к следующему: 
    1. ждем пока какой-нибудь клиент подключится к брокеру
    2. подписываемся на этого клиента
    3. получаем данные от брокера
    4. Переводим данные в понятный для БД вид
    5. отправляем их в БД
Все это было выполнено в виде пайтон скрипта в бесконечном цикле


Девятый слайд
Теперь, когда данные в нашей БД, мы можем их визуализировать.
После установки и запуска на сервере Grafana, нам остается сделать последний шаг, и указать адрес нашей базы данных в InfluxDB. Вся работа с grafana идет через графический интерфейс, что позволяет упростить взаимодействия. Остается лишь написать запрос в БД, который вернет нам набор данных, который необходимо визуализировать. Далее grafana все сделает сама. Пример графика на слайде
Десятый слайд
В ходе данной работы были выбраны оптимальные протокол передачи данных, способ хранения информации и средства визуализации. Также было разработано программное обеспечение отвечающее за безопасную передачу от конечных устройств до средств хранения и визуализации.





